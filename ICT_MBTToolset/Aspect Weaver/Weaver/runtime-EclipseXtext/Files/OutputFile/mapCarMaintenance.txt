context ExtendedCarAllocationDefinitions:: upgradePossible(): Boolean post:
result= if self.upgradeGroup->isNotEmpty() 

 then
 self.groupAvail(self.ExtendedCarAllocationDefinitions :: upgradeGroup)-> isNotEmpty and self.groupAvail(self.ExtendedCarAllocationDefinitions :: upgradeGroup).quantity@pre -self.demXGroup->select(d|d.carGroup=self.ExtendedCarAllocationDefinitions :: upgradeGroup).demand@pre > 0.1*self.groupQuota(self.curBranch, self.ExtendedCarAllocationDefinitions :: upgradeGroup) and
	(self.curBranch.nextDayR.car->collect(carGroup)->
    includes(upgradeGroup) or self.groupAvail(self.upgradeGroup)) 

else
False




context ExtendedCarAllocationDefinitions:: downgradePossible(): Boolean post:
result= if self.downgradeGroup-> isNotEmpty() 
 then
 self.groupAvail(self.ExtendedCarAllocationDefinitions :: downgradeGroup)-> isNotEmpty and self.groupAvail(self.ExtendedCarAllocationDefinitions :: downgradeGroup).quantity@pre -self.demXGroup->select(d|d.carGroup=self.ExtendedCarAllocationDefinitions :: downgradeGroup).demand@pre > 0.1*self.groupQuota(self.curBranch, self.ExtendedCarAllocationDefinitions :: downgradeGroup) and
	self.groupAvail(self.downgradeGroup)->isNotEmpty 

else
False
