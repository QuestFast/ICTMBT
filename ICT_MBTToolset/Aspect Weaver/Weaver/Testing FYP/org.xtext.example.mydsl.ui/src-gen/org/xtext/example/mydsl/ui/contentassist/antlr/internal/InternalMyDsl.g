/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAspectAssignment()); }
(rule__Model__AspectAssignment)
{ after(grammarAccess.getModelAccess().getAspectAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAspect
entryRuleAspect 
:
{ before(grammarAccess.getAspectRule()); }
	 ruleAspect
{ after(grammarAccess.getAspectRule()); } 
	 EOF 
;

// Rule Aspect
ruleAspect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectAccess().getAlternatives()); }
(rule__Aspect__Alternatives)
{ after(grammarAccess.getAspectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapping
entryRuleMapping 
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingAccess().getGroup()); }
(rule__Mapping__Group__0)
{ after(grammarAccess.getMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleletExpression
entryRuleletExpression 
:
{ before(grammarAccess.getLetExpressionRule()); }
	 ruleletExpression
{ after(grammarAccess.getLetExpressionRule()); } 
	 EOF 
;

// Rule letExpression
ruleletExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetExpressionAccess().getAlternatives()); }
(rule__LetExpression__Alternatives)
{ after(grammarAccess.getLetExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCOA
entryRuleCOA 
:
{ before(grammarAccess.getCOARule()); }
	 ruleCOA
{ after(grammarAccess.getCOARule()); } 
	 EOF 
;

// Rule COA
ruleCOA
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCOAAccess().getOperationParserRuleCall()); }
	ruleOperation
{ after(grammarAccess.getCOAAccess().getOperationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSCOA
entryRuleSCOA 
:
{ before(grammarAccess.getSCOARule()); }
	 ruleSCOA
{ after(grammarAccess.getSCOARule()); } 
	 EOF 
;

// Rule SCOA
ruleSCOA
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCOAAccess().getOperationParserRuleCall()); }
	ruleOperation
{ after(grammarAccess.getSCOAAccess().getOperationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeContext
entryRuleAttributeContext 
:
{ before(grammarAccess.getAttributeContextRule()); }
	 ruleAttributeContext
{ after(grammarAccess.getAttributeContextRule()); } 
	 EOF 
;

// Rule AttributeContext
ruleAttributeContext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeContextAccess().getGroup()); }
(rule__AttributeContext__Group__0)
{ after(grammarAccess.getAttributeContextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getAlternatives()); }
(rule__Operation__Alternatives)
{ after(grammarAccess.getOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleletVarNameArray
entryRuleletVarNameArray 
:
{ before(grammarAccess.getLetVarNameArrayRule()); }
	 ruleletVarNameArray
{ after(grammarAccess.getLetVarNameArrayRule()); } 
	 EOF 
;

// Rule letVarNameArray
ruleletVarNameArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getGroup()); }
(rule__LetVarNameArray__Group__0)
{ after(grammarAccess.getLetVarNameArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleletVarName
entryRuleletVarName 
:
{ before(grammarAccess.getLetVarNameRule()); }
	 ruleletVarName
{ after(grammarAccess.getLetVarNameRule()); } 
	 EOF 
;

// Rule letVarName
ruleletVarName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetVarNameAccess().getNameCharParserRuleCall()); }
	ruleNameChar
{ after(grammarAccess.getLetVarNameAccess().getNameCharParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAspectDefinition
entryRuleAspectDefinition 
:
{ before(grammarAccess.getAspectDefinitionRule()); }
	 ruleAspectDefinition
{ after(grammarAccess.getAspectDefinitionRule()); } 
	 EOF 
;

// Rule AspectDefinition
ruleAspectDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectDefinitionAccess().getGroup()); }
(rule__AspectDefinition__Group__0)
{ after(grammarAccess.getAspectDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAspectName
entryRuleAspectName 
:
{ before(grammarAccess.getAspectNameRule()); }
	 ruleAspectName
{ after(grammarAccess.getAspectNameRule()); } 
	 EOF 
;

// Rule AspectName
ruleAspectName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectNameAccess().getNameCharParserRuleCall()); }
	ruleNameChar
{ after(grammarAccess.getAspectNameAccess().getNameCharParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapping_Declaration
entryRuleMapping_Declaration 
:
{ before(grammarAccess.getMapping_DeclarationRule()); }
	 ruleMapping_Declaration
{ after(grammarAccess.getMapping_DeclarationRule()); } 
	 EOF 
;

// Rule Mapping_Declaration
ruleMapping_Declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapping_DeclarationAccess().getGroup()); }
(rule__Mapping_Declaration__Group__0)
{ after(grammarAccess.getMapping_DeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMappingName
entryRuleMappingName 
:
{ before(grammarAccess.getMappingNameRule()); }
	 ruleMappingName
{ after(grammarAccess.getMappingNameRule()); } 
	 EOF 
;

// Rule MappingName
ruleMappingName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingNameAccess().getNameAssignment()); }
(rule__MappingName__NameAssignment)
{ after(grammarAccess.getMappingNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointcut_Declaration
entryRulePointcut_Declaration 
:
{ before(grammarAccess.getPointcut_DeclarationRule()); }
	 rulePointcut_Declaration
{ after(grammarAccess.getPointcut_DeclarationRule()); } 
	 EOF 
;

// Rule Pointcut_Declaration
rulePointcut_Declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointcut_DeclarationAccess().getGroup()); }
(rule__Pointcut_Declaration__Group__0)
{ after(grammarAccess.getPointcut_DeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleContextDeclaration
entryRuleContextDeclaration 
:
{ before(grammarAccess.getContextDeclarationRule()); }
	 ruleContextDeclaration
{ after(grammarAccess.getContextDeclarationRule()); } 
	 EOF 
;

// Rule ContextDeclaration
ruleContextDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextDeclarationAccess().getGroup()); }
(rule__ContextDeclaration__Group__0)
{ after(grammarAccess.getContextDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierContext
entryRuleClassifierContext 
:
{ before(grammarAccess.getClassifierContextRule()); }
	 ruleClassifierContext
{ after(grammarAccess.getClassifierContextRule()); } 
	 EOF 
;

// Rule ClassifierContext
ruleClassifierContext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierContextAccess().getNameCharParserRuleCall()); }
	ruleNameChar
{ after(grammarAccess.getClassifierContextAccess().getNameCharParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationContext
entryRuleOperationContext 
:
{ before(grammarAccess.getOperationContextRule()); }
	 ruleOperationContext
{ after(grammarAccess.getOperationContextRule()); } 
	 EOF 
;

// Rule OperationContext
ruleOperationContext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationContextAccess().getGroup()); }
(rule__OperationContext__Group__0)
{ after(grammarAccess.getOperationContextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationName
entryRuleOperationName 
:
{ before(grammarAccess.getOperationNameRule()); }
	 ruleOperationName
{ after(grammarAccess.getOperationNameRule()); } 
	 EOF 
;

// Rule OperationName
ruleOperationName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationNameAccess().getNameCharParserRuleCall()); }
	ruleNameChar
{ after(grammarAccess.getOperationNameAccess().getNameCharParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArguments
entryRuleArguments 
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentsAccess().getNameCharParserRuleCall()); }
	ruleNameChar
{ after(grammarAccess.getArgumentsAccess().getNameCharParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturntype
entryRuleReturntype 
:
{ before(grammarAccess.getReturntypeRule()); }
	 ruleReturntype
{ after(grammarAccess.getReturntypeRule()); } 
	 EOF 
;

// Rule Returntype
ruleReturntype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturntypeAccess().getAlternatives()); }
(rule__Returntype__Alternatives)
{ after(grammarAccess.getReturntypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAI
entryRuleAI 
:
{ before(grammarAccess.getAIRule()); }
	 ruleAI
{ after(grammarAccess.getAIRule()); } 
	 EOF 
;

// Rule AI
ruleAI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAIAccess().getAlternatives()); }
(rule__AI__Alternatives)
{ after(grammarAccess.getAIAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdvice
entryRuleAdvice 
:
{ before(grammarAccess.getAdviceRule()); }
	 ruleAdvice
{ after(grammarAccess.getAdviceRule()); } 
	 EOF 
;

// Rule Advice
ruleAdvice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceAccess().getGroup()); }
(rule__Advice__Group__0)
{ after(grammarAccess.getAdviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdviceDeclaration
entryRuleAdviceDeclaration 
:
{ before(grammarAccess.getAdviceDeclarationRule()); }
	 ruleAdviceDeclaration
{ after(grammarAccess.getAdviceDeclarationRule()); } 
	 EOF 
;

// Rule AdviceDeclaration
ruleAdviceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceDeclarationAccess().getGroup()); }
(rule__AdviceDeclaration__Group__0)
{ after(grammarAccess.getAdviceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryType
entryRuleQueryType 
:
{ before(grammarAccess.getQueryTypeRule()); }
	 ruleQueryType
{ after(grammarAccess.getQueryTypeRule()); } 
	 EOF 
;

// Rule QueryType
ruleQueryType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryTypeAccess().getAlternatives()); }
(rule__QueryType__Alternatives)
{ after(grammarAccess.getQueryTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdviceType
entryRuleAdviceType 
:
{ before(grammarAccess.getAdviceTypeRule()); }
	 ruleAdviceType
{ after(grammarAccess.getAdviceTypeRule()); } 
	 EOF 
;

// Rule AdviceType
ruleAdviceType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdviceTypeAccess().getGroup()); }
(rule__AdviceType__Group__0)
{ after(grammarAccess.getAdviceTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntroAdviceQuery
entryRuleIntroAdviceQuery 
:
{ before(grammarAccess.getIntroAdviceQueryRule()); }
	 ruleIntroAdviceQuery
{ after(grammarAccess.getIntroAdviceQueryRule()); } 
	 EOF 
;

// Rule IntroAdviceQuery
ruleIntroAdviceQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntroAdviceQueryAccess().getNameAssignment()); }
(rule__IntroAdviceQuery__NameAssignment)
{ after(grammarAccess.getIntroAdviceQueryAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntro
entryRuleIntro 
:
{ before(grammarAccess.getIntroRule()); }
	 ruleIntro
{ after(grammarAccess.getIntroRule()); } 
	 EOF 
;

// Rule Intro
ruleIntro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntroAccess().getGroup()); }
(rule__Intro__Group__0)
{ after(grammarAccess.getIntroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntroDeclaration
entryRuleIntroDeclaration 
:
{ before(grammarAccess.getIntroDeclarationRule()); }
	 ruleIntroDeclaration
{ after(grammarAccess.getIntroDeclarationRule()); } 
	 EOF 
;

// Rule IntroDeclaration
ruleIntroDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntroDeclarationAccess().getGroup()); }
(rule__IntroDeclaration__Group__0)
{ after(grammarAccess.getIntroDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntroType
entryRuleIntroType 
:
{ before(grammarAccess.getIntroTypeRule()); }
	 ruleIntroType
{ after(grammarAccess.getIntroTypeRule()); } 
	 EOF 
;

// Rule IntroType
ruleIntroType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntroTypeAccess().getGroup()); }
(rule__IntroType__Group__0)
{ after(grammarAccess.getIntroTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntroQuery
entryRuleIntroQuery 
:
{ before(grammarAccess.getIntroQueryRule()); }
	 ruleIntroQuery
{ after(grammarAccess.getIntroQueryRule()); } 
	 EOF 
;

// Rule IntroQuery
ruleIntroQuery
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntroQueryAccess().getNameAssignment()); }
(rule__IntroQuery__NameAssignment)
{ after(grammarAccess.getIntroQueryAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryDeclaration
entryRuleQueryDeclaration 
:
{ before(grammarAccess.getQueryDeclarationRule()); }
	 ruleQueryDeclaration
{ after(grammarAccess.getQueryDeclarationRule()); } 
	 EOF 
;

// Rule QueryDeclaration
ruleQueryDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryDeclarationAccess().getGroup()); }
(rule__QueryDeclaration__Group__0)
{ after(grammarAccess.getQueryDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryBody
entryRuleQueryBody 
:
{ before(grammarAccess.getQueryBodyRule()); }
	 ruleQueryBody
{ after(grammarAccess.getQueryBodyRule()); } 
	 EOF 
;

// Rule QueryBody
ruleQueryBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryBodyAccess().getGroup()); }
(rule__QueryBody__Group__0)
{ after(grammarAccess.getQueryBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOclExpression
entryRuleOclExpression 
:
{ before(grammarAccess.getOclExpressionRule()); }
	 ruleOclExpression
{ after(grammarAccess.getOclExpressionRule()); } 
	 EOF 
;

// Rule OclExpression
ruleOclExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOclExpressionAccess().getValueAssignment()); }
(rule__OclExpression__ValueAssignment)
{ after(grammarAccess.getOclExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameChar
entryRuleNameChar 
:
{ before(grammarAccess.getNameCharRule()); }
	 ruleNameChar
{ after(grammarAccess.getNameCharRule()); } 
	 EOF 
;

// Rule NameChar
ruleNameChar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getNameCharAccess().getIDTerminalRuleCall()); }
(	RULE_ID)
{ after(grammarAccess.getNameCharAccess().getIDTerminalRuleCall()); }
)
(
{ before(grammarAccess.getNameCharAccess().getIDTerminalRuleCall()); }
(	RULE_ID)*
{ after(grammarAccess.getNameCharAccess().getIDTerminalRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Aspect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectAccess().getMappingParserRuleCall_0()); }
	ruleMapping
{ after(grammarAccess.getAspectAccess().getMappingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAspectAccess().getAspectDefinitionParserRuleCall_1()); }
	ruleAspectDefinition
{ after(grammarAccess.getAspectAccess().getAspectDefinitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_0()); }
(rule__LetExpression__Group_0__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLetExpressionAccess().getGroup_1()); }
(rule__LetExpression__Group_1__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2()); }
(rule__LetExpression__Group_2__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getClassifierContextParserRuleCall_0()); }
	ruleClassifierContext
{ after(grammarAccess.getOperationAccess().getClassifierContextParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getOperationContextParserRuleCall_1()); }
	ruleOperationContext
{ after(grammarAccess.getOperationAccess().getOperationContextParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getAttributeContextParserRuleCall_2()); }
	ruleAttributeContext
{ after(grammarAccess.getOperationAccess().getAttributeContextParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextDeclarationAccess().getClassifierContextParserRuleCall_1_0()); }
	ruleClassifierContext
{ after(grammarAccess.getContextDeclarationAccess().getClassifierContextParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getContextDeclarationAccess().getOperationContextParserRuleCall_1_1()); }
	ruleOperationContext
{ after(grammarAccess.getContextDeclarationAccess().getOperationContextParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Returntype__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturntypeAccess().getBooleanKeyword_0()); }

	'Boolean' 

{ after(grammarAccess.getReturntypeAccess().getBooleanKeyword_0()); }
)

    |(
{ before(grammarAccess.getReturntypeAccess().getStringKeyword_1()); }

	'String' 

{ after(grammarAccess.getReturntypeAccess().getStringKeyword_1()); }
)

    |(
{ before(grammarAccess.getReturntypeAccess().getIntKeyword_2()); }

	'int' 

{ after(grammarAccess.getReturntypeAccess().getIntKeyword_2()); }
)

    |(
{ before(grammarAccess.getReturntypeAccess().getFloatKeyword_3()); }

	'float' 

{ after(grammarAccess.getReturntypeAccess().getFloatKeyword_3()); }
)

    |(
{ before(grammarAccess.getReturntypeAccess().getDoubleKeyword_4()); }

	'double' 

{ after(grammarAccess.getReturntypeAccess().getDoubleKeyword_4()); }
)

    |(
{ before(grammarAccess.getReturntypeAccess().getNameCharParserRuleCall_5()); }
	ruleNameChar
{ after(grammarAccess.getReturntypeAccess().getNameCharParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AI__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAIAccess().getAdviceParserRuleCall_0()); }
	ruleAdvice
{ after(grammarAccess.getAIAccess().getAdviceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAIAccess().getIntroParserRuleCall_1()); }
	ruleIntro
{ after(grammarAccess.getAIAccess().getIntroParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryTypeAccess().getPreKeyword_0()); }

	'pre' 

{ after(grammarAccess.getQueryTypeAccess().getPreKeyword_0()); }
)

    |(
{ before(grammarAccess.getQueryTypeAccess().getPostKeyword_1()); }

	'post' 

{ after(grammarAccess.getQueryTypeAccess().getPostKeyword_1()); }
)

    |(
{ before(grammarAccess.getQueryTypeAccess().getInvKeyword_2()); }

	'inv' 

{ after(grammarAccess.getQueryTypeAccess().getInvKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceType__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceTypeAccess().getAndKeyword_0_0()); }

	'and' 

{ after(grammarAccess.getAdviceTypeAccess().getAndKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getAdviceTypeAccess().getOrKeyword_0_1()); }

	'or' 

{ after(grammarAccess.getAdviceTypeAccess().getOrKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getAdviceTypeAccess().getXorKeyword_0_2()); }

	'xor' 

{ after(grammarAccess.getAdviceTypeAccess().getXorKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Mapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getMappingKeyword_0()); }

	'mapping' 

{ after(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getMappingnameAssignment_1()); }
(rule__Mapping__MappingnameAssignment_1)
{ after(grammarAccess.getMappingAccess().getMappingnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLetExpressionParserRuleCall_3()); }
	ruleletExpression
{ after(grammarAccess.getMappingAccess().getLetExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LetExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0__0__Impl
	rule__LetExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_0_0()); }

	'let' 

{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0__1__Impl
	rule__LetExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_0_1()); }
	ruleletVarName
{ after(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0__2__Impl
	rule__LetExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getLetExpressionAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0__3__Impl
	rule__LetExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_0_3()); }

	'{' 

{ after(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0__4__Impl
	rule__LetExpression__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_0_4()); }
(rule__LetExpression__Group_0_4__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_0_5()); }

	'}' 

{ after(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LetExpression__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0_4__0__Impl
	rule__LetExpression__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getOperationParserRuleCall_0_4_0()); }
	ruleOperation
{ after(grammarAccess.getLetExpressionAccess().getOperationParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_0_4_1()); }
(rule__LetExpression__Group_0_4_1__0)*
{ after(grammarAccess.getLetExpressionAccess().getGroup_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_0_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0_4_1__0__Impl
	rule__LetExpression__Group_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_0_4_1_0()); }

	',' 

{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_0_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_0_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getOperationParserRuleCall_0_4_1_1()); }
	ruleOperation
{ after(grammarAccess.getLetExpressionAccess().getOperationParserRuleCall_0_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__0__Impl
	rule__LetExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_1_0()); }

	'let' 

{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__1__Impl
	rule__LetExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_1_1()); }
	ruleletVarName
{ after(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__2__Impl
	rule__LetExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2()); }

	'->' 

{ after(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__3__Impl
	rule__LetExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_1_3()); }
	ruleletVarName
{ after(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__4__Impl
	rule__LetExpression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getColonKeyword_1_4()); }

	':' 

{ after(grammarAccess.getLetExpressionAccess().getColonKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__5__Impl
	rule__LetExpression__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_1_5()); }

	'{' 

{ after(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__6__Impl
	rule__LetExpression__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_1_6()); }
(rule__LetExpression__Group_1_6__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__7__Impl
	rule__LetExpression__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_1_7()); }
(rule__LetExpression__Group_1_7__0)*
{ after(grammarAccess.getLetExpressionAccess().getGroup_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_1_8()); }

	'}' 

{ after(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__LetExpression__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_6__0__Impl
	rule__LetExpression__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_1_6_0()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_6__1__Impl
	rule__LetExpression__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_6_1()); }

	'->' 

{ after(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getSCOAParserRuleCall_1_6_2()); }
	ruleSCOA
{ after(grammarAccess.getLetExpressionAccess().getSCOAParserRuleCall_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetExpression__Group_1_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_7__0__Impl
	rule__LetExpression__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_1_7_0()); }

	',' 

{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_1_7_1()); }
(rule__LetExpression__Group_1_7_1__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_1_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_1_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_7_1__0__Impl
	rule__LetExpression__Group_1_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_1_7_1_0()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_1_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_7_1__1__Impl
	rule__LetExpression__Group_1_7_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_7_1_1()); }

	'->' 

{ after(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_1_7_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_1_7_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_1_7_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getSCOAParserRuleCall_1_7_1_2()); }
	ruleSCOA
{ after(grammarAccess.getLetExpressionAccess().getSCOAParserRuleCall_1_7_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__0__Impl
	rule__LetExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_2_0()); }

	'let' 

{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__1__Impl
	rule__LetExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_2_1()); }
	ruleletVarName
{ after(grammarAccess.getLetExpressionAccess().getLetVarNameParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__2__Impl
	rule__LetExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_2()); }

	'->' 

{ after(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__3__Impl
	rule__LetExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetVarNameArrayParserRuleCall_2_3()); }
	ruleletVarNameArray
{ after(grammarAccess.getLetExpressionAccess().getLetVarNameArrayParserRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__4__Impl
	rule__LetExpression__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getColonKeyword_2_4()); }

	':' 

{ after(grammarAccess.getLetExpressionAccess().getColonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__5__Impl
	rule__LetExpression__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_2_5()); }

	'{' 

{ after(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__6__Impl
	rule__LetExpression__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_6()); }
(rule__LetExpression__Group_2_6__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__7__Impl
	rule__LetExpression__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_7()); }
(rule__LetExpression__Group_2_7__0)*
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_2_8()); }

	'}' 

{ after(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__LetExpression__Group_2_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6__0__Impl
	rule__LetExpression__Group_2_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_6_0()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6__1__Impl
	rule__LetExpression__Group_2_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_6_1()); }

	'->' 

{ after(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6__2__Impl
	rule__LetExpression__Group_2_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_2_6_2()); }

	'{' 

{ after(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_2_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6__3__Impl
	rule__LetExpression__Group_2_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_6_3()); }
(rule__LetExpression__Group_2_6_3__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_2_6_4()); }

	'}' 

{ after(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_2_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LetExpression__Group_2_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6_3__0__Impl
	rule__LetExpression__Group_2_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_6_3_0()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_6_3_1()); }
(rule__LetExpression__Group_2_6_3_1__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_6_3_1()); }
)
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_6_3_1()); }
(rule__LetExpression__Group_2_6_3_1__0)*
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_6_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_2_6_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6_3_1__0__Impl
	rule__LetExpression__Group_2_6_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_6_3_1_0()); }

	',' 

{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_6_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_6_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_6_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_6_3_1_1()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_6_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_2_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7__0__Impl
	rule__LetExpression__Group_2_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_7_0()); }

	',' 

{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_7_1()); }
(rule__LetExpression__Group_2_7_1__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_2_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1__0__Impl
	rule__LetExpression__Group_2_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_7_1_0()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1__1__Impl
	rule__LetExpression__Group_2_7_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_7_1_1()); }

	'->' 

{ after(grammarAccess.getLetExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1__2__Impl
	rule__LetExpression__Group_2_7_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_2_7_1_2()); }

	'{' 

{ after(grammarAccess.getLetExpressionAccess().getLeftCurlyBracketKeyword_2_7_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1__3__Impl
	rule__LetExpression__Group_2_7_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_7_1_3()); }
(rule__LetExpression__Group_2_7_1_3__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_7_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_2_7_1_4()); }

	'}' 

{ after(grammarAccess.getLetExpressionAccess().getRightCurlyBracketKeyword_2_7_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LetExpression__Group_2_7_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1_3__0__Impl
	rule__LetExpression__Group_2_7_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_7_1_3_0()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_7_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_7_1_3_1()); }
(rule__LetExpression__Group_2_7_1_3_1__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_7_1_3_1()); }
)
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2_7_1_3_1()); }
(rule__LetExpression__Group_2_7_1_3_1__0)*
{ after(grammarAccess.getLetExpressionAccess().getGroup_2_7_1_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group_2_7_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1_3_1__0__Impl
	rule__LetExpression__Group_2_7_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_7_1_3_1_0()); }

	',' 

{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_7_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2_7_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2_7_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2_7_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_7_1_3_1_1()); }
	ruleCOA
{ after(grammarAccess.getLetExpressionAccess().getCOAParserRuleCall_2_7_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeContext__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeContext__Group__0__Impl
	rule__AttributeContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeContext__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeContextAccess().getClassifierContextParserRuleCall_0()); }
	ruleClassifierContext
{ after(grammarAccess.getAttributeContextAccess().getClassifierContextParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeContext__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeContext__Group__1__Impl
	rule__AttributeContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeContext__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeContextAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getAttributeContextAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeContext__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeContext__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeContext__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeContextAccess().getNameCharParserRuleCall_2()); }
	ruleNameChar
{ after(grammarAccess.getAttributeContextAccess().getNameCharParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetVarNameArray__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group__0__Impl
	rule__LetVarNameArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getLetVarNameArrayAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetVarNameArray__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group__1__Impl
	rule__LetVarNameArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getGroup_1()); }
(rule__LetVarNameArray__Group_1__0)
{ after(grammarAccess.getLetVarNameArrayAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetVarNameArray__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getLetVarNameArrayAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetVarNameArray__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group_1__0__Impl
	rule__LetVarNameArray__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getLetVarNameParserRuleCall_1_0()); }
	ruleletVarName
{ after(grammarAccess.getLetVarNameArrayAccess().getLetVarNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetVarNameArray__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLetVarNameArrayAccess().getGroup_1_1()); }
(rule__LetVarNameArray__Group_1_1__0)
{ after(grammarAccess.getLetVarNameArrayAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getLetVarNameArrayAccess().getGroup_1_1()); }
(rule__LetVarNameArray__Group_1_1__0)*
{ after(grammarAccess.getLetVarNameArrayAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetVarNameArray__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group_1_1__0__Impl
	rule__LetVarNameArray__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getLetVarNameArrayAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetVarNameArray__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetVarNameArray__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetVarNameArray__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetVarNameArrayAccess().getLetVarNameParserRuleCall_1_1_1()); }
	ruleletVarName
{ after(grammarAccess.getLetVarNameArrayAccess().getLetVarNameParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AspectDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__0__Impl
	rule__AspectDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getAspectKeyword_0()); }

	'aspect' 

{ after(grammarAccess.getAspectDefinitionAccess().getAspectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__1__Impl
	rule__AspectDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getAspectNameParserRuleCall_1()); }
	ruleAspectName
{ after(grammarAccess.getAspectDefinitionAccess().getAspectNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__2__Impl
	rule__AspectDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAspectDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__3__Impl
	rule__AspectDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getMappingdeclarartionAssignment_3()); }
(rule__AspectDefinition__MappingdeclarartionAssignment_3)
{ after(grammarAccess.getAspectDefinitionAccess().getMappingdeclarartionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__4__Impl
	rule__AspectDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getPointcutdeclarationAssignment_4()); }
(rule__AspectDefinition__PointcutdeclarationAssignment_4)
{ after(grammarAccess.getAspectDefinitionAccess().getPointcutdeclarationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__5__Impl
	rule__AspectDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getContextDeclarationParserRuleCall_5()); }
	ruleContextDeclaration
{ after(grammarAccess.getAspectDefinitionAccess().getContextDeclarationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__6__Impl
	rule__AspectDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getQueryDeclarationParserRuleCall_6()); }
(	ruleQueryDeclaration)?
{ after(grammarAccess.getAspectDefinitionAccess().getQueryDeclarationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__7__Impl
	rule__AspectDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getAIDeclarationAssignment_7()); }
(rule__AspectDefinition__AIDeclarationAssignment_7)
{ after(grammarAccess.getAspectDefinitionAccess().getAIDeclarationAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectDefinition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getAspectDefinitionAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Mapping_Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_Declaration__Group__0__Impl
	rule__Mapping_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_DeclarationAccess().getImport_mappingKeyword_0()); }

	'import_mapping' 

{ after(grammarAccess.getMapping_DeclarationAccess().getImport_mappingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping_Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_Declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_DeclarationAccess().getReference_mappingnameAssignment_1()); }
(rule__Mapping_Declaration__Reference_mappingnameAssignment_1)
{ after(grammarAccess.getMapping_DeclarationAccess().getReference_mappingnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pointcut_Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut_Declaration__Group__0__Impl
	rule__Pointcut_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut_Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcut_DeclarationAccess().getPointcutKeyword_0()); }

	'pointcut' 

{ after(grammarAccess.getPointcut_DeclarationAccess().getPointcutKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut_Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointcut_Declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut_Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcut_DeclarationAccess().getNameAssignment_1()); }
(rule__Pointcut_Declaration__NameAssignment_1)
{ after(grammarAccess.getPointcut_DeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContextDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextDeclaration__Group__0__Impl
	rule__ContextDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextDeclarationAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getContextDeclarationAccess().getContextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextDeclarationAccess().getAlternatives_1()); }
(rule__ContextDeclaration__Alternatives_1)
{ after(grammarAccess.getContextDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationContext__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__0__Impl
	rule__OperationContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getClassifierContextParserRuleCall_0()); }
	ruleClassifierContext
{ after(grammarAccess.getOperationContextAccess().getClassifierContextParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__1__Impl
	rule__OperationContext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getOperationContextAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__2__Impl
	rule__OperationContext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getOperationNameParserRuleCall_2()); }
	ruleOperationName
{ after(grammarAccess.getOperationContextAccess().getOperationNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__3__Impl
	rule__OperationContext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getOperationContextAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__4__Impl
	rule__OperationContext__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getGroup_4()); }
(rule__OperationContext__Group_4__0)?
{ after(grammarAccess.getOperationContextAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__5__Impl
	rule__OperationContext__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOperationContextAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getGroup_6()); }
(rule__OperationContext__Group_6__0)?
{ after(grammarAccess.getOperationContextAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OperationContext__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group_4__0__Impl
	rule__OperationContext__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getArgumentsParserRuleCall_4_0()); }
	ruleArguments
{ after(grammarAccess.getOperationContextAccess().getArgumentsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getGroup_4_1()); }
(rule__OperationContext__Group_4_1__0)*
{ after(grammarAccess.getOperationContextAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationContext__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group_4_1__0__Impl
	rule__OperationContext__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getOperationContextAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getArgumentsParserRuleCall_4_1_1()); }
	ruleArguments
{ after(grammarAccess.getOperationContextAccess().getArgumentsParserRuleCall_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationContext__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group_6__0__Impl
	rule__OperationContext__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getColonKeyword_6_0()); }

	':' 

{ after(grammarAccess.getOperationContextAccess().getColonKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationContext__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationContext__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationContext__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationContextAccess().getReturntypeParserRuleCall_6_1()); }
	ruleReturntype
{ after(grammarAccess.getOperationContextAccess().getReturntypeParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Advice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__0__Impl
	rule__Advice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getAdviceDeclarationParserRuleCall_0()); }
	ruleAdviceDeclaration
{ after(grammarAccess.getAdviceAccess().getAdviceDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__1__Impl
	rule__Advice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getAdvicetypeAssignment_1()); }
(rule__Advice__AdvicetypeAssignment_1)
{ after(grammarAccess.getAdviceAccess().getAdvicetypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Advice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Advice__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getIntroadvicequeryAssignment_2()); }
(rule__Advice__IntroadvicequeryAssignment_2)
{ after(grammarAccess.getAdviceAccess().getIntroadvicequeryAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdviceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceDeclaration__Group__0__Impl
	rule__AdviceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceDeclarationAccess().getAdviceKeyword_0()); }

	'advice' 

{ after(grammarAccess.getAdviceDeclarationAccess().getAdviceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceDeclaration__Group__1__Impl
	rule__AdviceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceDeclarationAccess().getQueryTypeParserRuleCall_1()); }
	ruleQueryType
{ after(grammarAccess.getAdviceDeclarationAccess().getQueryTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAdviceDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdviceType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceType__Group__0__Impl
	rule__AdviceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceTypeAccess().getAlternatives_0()); }
(rule__AdviceType__Alternatives_0)
{ after(grammarAccess.getAdviceTypeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdviceType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceTypeAccess().getNameAssignment_1()); }
(rule__AdviceType__NameAssignment_1)
{ after(grammarAccess.getAdviceTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Intro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Intro__Group__0__Impl
	rule__Intro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Intro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroAccess().getIntroDeclarationParserRuleCall_0()); }
	ruleIntroDeclaration
{ after(grammarAccess.getIntroAccess().getIntroDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Intro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Intro__Group__1__Impl
	rule__Intro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Intro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroAccess().getIntrotypeAssignment_1()); }
(rule__Intro__IntrotypeAssignment_1)
{ after(grammarAccess.getIntroAccess().getIntrotypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Intro__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Intro__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Intro__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroAccess().getIntroqueyAssignment_2()); }
(rule__Intro__IntroqueyAssignment_2)
{ after(grammarAccess.getIntroAccess().getIntroqueyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntroDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntroDeclaration__Group__0__Impl
	rule__IntroDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntroDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroDeclarationAccess().getIntroKeyword_0()); }

	'intro' 

{ after(grammarAccess.getIntroDeclarationAccess().getIntroKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntroDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntroDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntroDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getIntroDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntroType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntroType__Group__0__Impl
	rule__IntroType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntroType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroTypeAccess().getQueryTypeParserRuleCall_0()); }
	ruleQueryType
{ after(grammarAccess.getIntroTypeAccess().getQueryTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntroType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntroType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntroType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroTypeAccess().getNameAssignment_1()); }
(rule__IntroType__NameAssignment_1)
{ after(grammarAccess.getIntroTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QueryDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryDeclaration__Group__0__Impl
	rule__QueryDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryDeclarationAccess().getQueryTypeParserRuleCall_0()); }
	ruleQueryType
{ after(grammarAccess.getQueryDeclarationAccess().getQueryTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryDeclaration__Group__1__Impl
	rule__QueryDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryDeclarationAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getQueryDeclarationAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryDeclaration__Group__2__Impl
	rule__QueryDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryDeclarationAccess().getSelectKeyword_2()); }

	'select' 

{ after(grammarAccess.getQueryDeclarationAccess().getSelectKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryDeclarationAccess().getQueryBodyParserRuleCall_3()); }
	ruleQueryBody
{ after(grammarAccess.getQueryDeclarationAccess().getQueryBodyParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QueryBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryBody__Group__0__Impl
	rule__QueryBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryBodyAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getQueryBodyAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryBody__Group__1__Impl
	rule__QueryBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryBodyAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getQueryBodyAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryBodyAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getQueryBodyAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpOCLExpressionKeyword_0_0()); }

	'exp:OCLExpression' 

{ after(grammarAccess.getExpressionAccess().getExpOCLExpressionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
	rule__Expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVerticalLineKeyword_0_1()); }

	'|' 

{ after(grammarAccess.getExpressionAccess().getVerticalLineKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpOclIsTypeOfThenExpKeyword_0_2()); }

	'exp.oclIsTypeOf(thenExp)' 

{ after(grammarAccess.getExpressionAccess().getExpOclIsTypeOfThenExpKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_0()); }
(rule__Expression__Group_1_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameAssignment_1_1()); }
(rule__Expression__NameAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__0__Impl
	rule__Expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpOCLExpressionKeyword_1_0_0()); }

	'exp:OCLExpression' 

{ after(grammarAccess.getExpressionAccess().getExpOCLExpressionKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__1__Impl
	rule__Expression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVerticalLineKeyword_1_0_1()); }

	'|' 

{ after(grammarAccess.getExpressionAccess().getVerticalLineKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__2__Impl
	rule__Expression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpOclIsTypeOfIfExpKeyword_1_0_2()); }

	'exp.oclIsTypeOf(ifExp)' 

{ after(grammarAccess.getExpressionAccess().getExpOclIsTypeOfIfExpKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__3__Impl
	rule__Expression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAndKeyword_1_0_3()); }

	'and' 

{ after(grammarAccess.getExpressionAccess().getAndKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__4__Impl
	rule__Expression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpConditionRefferedVariableKeyword_1_0_4()); }

	'exp.condition.refferedVariable' 

{ after(grammarAccess.getExpressionAccess().getExpConditionRefferedVariableKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEqualsSignKeyword_1_0_5()); }

	'=' 

{ after(grammarAccess.getExpressionAccess().getEqualsSignKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__Model__AspectAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAspectAspectParserRuleCall_0()); }
	ruleAspect{ after(grammarAccess.getModelAccess().getAspectAspectParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__MappingnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getMappingnameMappingNameParserRuleCall_1_0()); }
	ruleMappingName{ after(grammarAccess.getMappingAccess().getMappingnameMappingNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__MappingdeclarartionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getMappingdeclarartionMapping_DeclarationParserRuleCall_3_0()); }
	ruleMapping_Declaration{ after(grammarAccess.getAspectDefinitionAccess().getMappingdeclarartionMapping_DeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__PointcutdeclarationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getPointcutdeclarationPointcut_DeclarationParserRuleCall_4_0()); }
	rulePointcut_Declaration{ after(grammarAccess.getAspectDefinitionAccess().getPointcutdeclarationPointcut_DeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectDefinition__AIDeclarationAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectDefinitionAccess().getAIDeclarationAIParserRuleCall_7_0()); }
	ruleAI{ after(grammarAccess.getAspectDefinitionAccess().getAIDeclarationAIParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_Declaration__Reference_mappingnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_DeclarationAccess().getReference_mappingnameMappingNameCrossReference_1_0()); }
(
{ before(grammarAccess.getMapping_DeclarationAccess().getReference_mappingnameMappingNameIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMapping_DeclarationAccess().getReference_mappingnameMappingNameIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMapping_DeclarationAccess().getReference_mappingnameMappingNameCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getMappingNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut_Declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointcut_DeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPointcut_DeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__AdvicetypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getAdvicetypeAdviceTypeParserRuleCall_1_0()); }
	ruleAdviceType{ after(grammarAccess.getAdviceAccess().getAdvicetypeAdviceTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Advice__IntroadvicequeryAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceAccess().getIntroadvicequeryIntroAdviceQueryParserRuleCall_2_0()); }
	ruleIntroAdviceQuery{ after(grammarAccess.getAdviceAccess().getIntroadvicequeryIntroAdviceQueryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdviceTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAdviceTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntroAdviceQuery__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroAdviceQueryAccess().getNameOclExpressionParserRuleCall_0()); }
	ruleOclExpression{ after(grammarAccess.getIntroAdviceQueryAccess().getNameOclExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intro__IntrotypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroAccess().getIntrotypeIntroTypeParserRuleCall_1_0()); }
	ruleIntroType{ after(grammarAccess.getIntroAccess().getIntrotypeIntroTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Intro__IntroqueyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroAccess().getIntroqueyIntroQueryParserRuleCall_2_0()); }
	ruleIntroQuery{ after(grammarAccess.getIntroAccess().getIntroqueyIntroQueryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntroType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIntroTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntroQuery__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntroQueryAccess().getNameOclExpressionParserRuleCall_0()); }
	ruleOclExpression{ after(grammarAccess.getIntroQueryAccess().getNameOclExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OclExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOclExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getOclExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


